name: DKMS Build Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        KERNEL_VERSION:
          - 6.2
          - 6.5
    env:
      KERNEL_VERSION: ${{ matrix.KERNEL_VERSION }}

    steps:
    - uses: actions/checkout@v4
    - run: sudo ./scripts/ci/setup-linux-headers-v${KERNEL_VERSION}.sh
    - run: sudo apt-get install dkms

    - name: Setup env
      run: |
        KERNEL_VERSION2=$(find /lib/modules -type d -name "$KERNEL_VERSION*" -printf '%f\n')
        MODULE_NAME=$(awk -F= '/PACKAGE_NAME/ {print $2}' dkms.conf | sed 's/"//g')
        MODULE_VERSION=$(awk -F= '/PACKAGE_VERSION/ {print $2}' dkms.conf | sed 's/"//g')
        echo "MODULE_NAME=$MODULE_NAME" >> $GITHUB_ENV
        echo "MODULE_VERSION=$MODULE_VERSION" >> $GITHUB_ENV
        echo "KERNEL_VERSION2=$KERNEL_VERSION2" >> $GITHUB_ENV

    - name: print debug info
      run: |
        set -x
        uname -a
        cat /etc/os-release
        modinfo vxlan
        ls -alh /lib/modules

    - run: sudo dkms add .
    - run: sudo dkms build -m $MODULE_NAME -v $MODULE_VERSION -k $KERNEL_VERSION2
    - run: sudo dkms status -m $MODULE_NAME --all

    - name: print dkms log
      if: always()
      run: cat /var/lib/dkms/$MODULE_NAME/$MODULE_VERSION/build/make.log || true

    - run: sudo dkms status $MODULE_NAME

    # dkms build で -k を指定して、微妙にコケたとき（？）の出力先
    - run: modinfo /var/lib/dkms/$MODULE_NAME/$MODULE_VERSION/build/vxlan/vxlan2.ko || true
    # dkms build で -k を指定して、正常終了したときの出力先
    - run: modinfo /var/lib/dkms/$MODULE_NAME/$MODULE_VERSION/$KERNEL_VERSION2/x86_64/module/vxlan2.ko || true
